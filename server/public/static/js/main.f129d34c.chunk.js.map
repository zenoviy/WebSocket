{"version":3,"sources":["api/serverRequests.js","actions/loginActions.js","components/ChatArea.jsx","components/SidePanel.jsx","components/SearchFields.jsx","components/Home.jsx","helpers/validators.js","helpers/transformData.js","components/Login.jsx","constants/actionsName.js","actions/registrationAction.js","components/Registration.jsx","components/WelcomeScreen.jsx","actions/switchForm.js","components/Navigation.jsx","App.js","reportWebVitals.js","reducers/initUser.js","reducers/appGlobalState.js","reducers/main.js","store/configurStore.js","index.js"],"names":["TIMEOUT","setLogin","formObject","dispatch","Promise","resolve","reject","setTimeout","text","isLogined","then","type","payload","unLogin","ChatArea","Fragment","React","Component","SidePanelArea","SearchFieldArea","props","searchField","onSearch","bind","target","console","log","value","ref","input","onChange","e","Home","unLoginAction","this","className","onClick","connect","store","loginCheck","formValidationText","nameOfInput","name","typeOfInput","valueOfInput","errorMessage","validField","regEx","RegExp","match","length","formDataToObject","form","callbackInField","formValid","formItem","call","validity","valid","status","Login","initLoginAction","getLoginInputData","onSubmitForm","loginForm","state","userEmail","userPassword","formErrors","validatioMessage","formOperations","validationInfo","seveValidationInfo","setState","infoObject","targetName","Object","keys","assign","entries","map","i","event","preventDefault","formResult","finalObject","displayValidatorMessage","validatorMessage","onSubmit","placeholder","required","pattern","minLength","maxLength","formActions","setRegistration","registrationData","fetch","MAIN_HOST","method","body","data","json","Registration","initRegistrationAction","registrationForm","userName","WelcomeScreen","switchToLogin","switchToRegistration","selectAuthOption","switchForm","globalState","currentInitForm","to","formState","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loginMessage","combineReducers","action","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f129d34c.chunk.js","sourcesContent":["import {\r\n    MAIN_HOST,\r\n    REGISTER_USER_API,\r\n    /*LOGIN_USER_API,\r\n    CHECK_USER_API*/\r\n} from '../constants/appValue';\r\n\r\n\r\nconst TIMEOUT = 1000;\r\nexport function checkUserLogin(loginData){\r\n    return new Promise((resolve, reject) => {\r\n\r\n\r\n        setTimeout(() => {\r\n            resolve({\r\n                text: \"success\",\r\n                isLogined: true\r\n            })\r\n        }, TIMEOUT)\r\n    })\r\n}\r\n\r\nexport function registrationNewUser(registrationData){\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            let url = MAIN_HOST + REGISTER_USER_API;\r\n            console.log(registrationData)\r\n            fetch(url, {\r\n                method: 'POST',\r\n                body: registrationData ? registrationData : null\r\n            }).then(data => {\r\n                return data.json()\r\n            }).then(data => {\r\n                console.log('Server response', data)\r\n            })\r\n            resolve({\r\n                text: \"User was registered\",\r\n                isLogined: true\r\n            })\r\n        }, TIMEOUT)\r\n    })\r\n}\r\nexport function unregisterUser(){\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve({\r\n                text: \"User was unlogined\",\r\n                isLogined: false\r\n            })\r\n        }, TIMEOUT)\r\n    })\r\n}","import { checkUserLogin, unregisterUser } from '../api/serverRequests';\r\n\r\nexport function setLogin(formObject){\r\n    return dispatch => {\r\n        checkUserLogin()\r\n        .then(resolve => { \r\n            dispatch({ type: 'LOGINED', payload: resolve })\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function unLogin(formObject){\r\n    return dispatch => {\r\n        unregisterUser()\r\n        .then(resolve => { \r\n            dispatch({ type: 'UNLOGINED', payload: resolve })\r\n\r\n        })\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nexport default class ChatArea extends React.Component {\r\n    render(){\r\n        const text = `Lorem ipsum dolor sit amet consectetur, \r\n        adipisicing elit. Ducimus earum eligendi rem quasi vero recusandae accusantium \r\n        vitae neque nam. Labore quo odio aspernatur beatae hic alias nemo minus \r\n        temporibus porro!`;\r\n        return(\r\n            <React.Fragment>\r\n                <p>{text}</p>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nexport default class SidePanelArea extends React.Component {\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h3>Side Panel</h3>\r\n                <ul>\r\n                   <li>#1</li>\r\n                   <li>#2</li>\r\n                   <li>#3</li> \r\n                </ul>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nexport default class SearchFieldArea extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.searchField = null;\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n    onSearch(target){\r\n        console.log(target.value)\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <input ref={ input => this.searchField = input } type=\"text\" onChange={e => this.onSearch(e.target)} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { unLogin } from '../actions/loginActions';\r\nimport ChatArea from './ChatArea';\r\nimport SidePanelArea from './SidePanel';\r\nimport SearchFieldArea from './SearchFields';\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.unLoginAction = this.unLoginAction.bind(this);\r\n    }\r\n    unLoginAction(){\r\n        this.props.unLogin()\r\n    }\r\n    render(){\r\n        return(\r\n            <main className=\"social-body\">\r\n                <h1>HomePage</h1>\r\n                <p>Chat</p>\r\n                <button onClick={this.unLoginAction}>Unregister</button>\r\n\r\n                <ChatArea />\r\n                <SidePanelArea />\r\n                <SearchFieldArea />\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(store => ({\r\n    loginCheck: store.loginCheck\r\n}), dispatch => ({\r\n    unLogin: () => {\r\n        const loginData = () => { \r\n            return unLogin(dispatch)\r\n        }\r\n        dispatch(loginData())\r\n    }\r\n}))(Home)\r\n\r\n","export function formValidationText(input){\r\n    if(!input || !input.type) return\r\n    let nameOfInput = input.name;\r\n    let typeOfInput = input.type;\r\n    let valueOfInput = input.value;\r\n    let errorMessage = '';\r\n    let validField = false;\r\n    switch(typeOfInput){\r\n        case 'email':\r\n            let regEx = new RegExp(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n            validField = valueOfInput.match(regEx) ? true : false;\r\n            errorMessage = !valueOfInput ? \"No email\" :  \r\n            !validField ? \"Invalid Email field\" : '';\r\n            break;\r\n        case 'password':\r\n            validField = valueOfInput.length < 5 || valueOfInput.length > 30 || !valueOfInput.length ? false : true;\r\n            errorMessage = !valueOfInput ? \"No password\" : \r\n            valueOfInput.length < 5 ? \"Too short password\" : \r\n            valueOfInput.length > 30 ? \"Too long password\" : '' ;\r\n            break;\r\n        default :\r\n            validField = valueOfInput.length < 3 || valueOfInput.length || !valueOfInput.length > 30 ? false : true;\r\n            errorMessage = !valueOfInput.length ? \"No name\" : \r\n            valueOfInput.length < 3 ? \"Too short name\" : \r\n            valueOfInput.length > 30 ? \"Too long name\" : '' ;\r\n            break;\r\n    }\r\n\r\n    return {\r\n        [nameOfInput] : errorMessage,\r\n        validField\r\n    }\r\n    \r\n}","export function formDataToObject(form, callbackInField){\r\n    let formObject = {};\r\n    let formValid = false;\r\n    for(let formItem of form){\r\n        if(formItem.name){\r\n            formObject[formItem.name] = formItem.value;\r\n            if(callbackInField) callbackInField.call(this, formItem)\r\n            if(!formItem.validity.valid){\r\n                return { status: formItem.validity.valid, formObject}\r\n            }\r\n            formValid = formItem.validity.valid;\r\n        }\r\n    }\r\n    return {\r\n        formValid,\r\n        formObject\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setLogin } from '../actions/loginActions';\r\nimport { formValidationText } from '../helpers/validators';\r\nimport { formDataToObject } from '../helpers/transformData';\r\n\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.initLoginAction = this.initLoginAction.bind(this);\r\n        this.getLoginInputData = this.getLoginInputData.bind(this);\r\n        this.onSubmitForm = this.onSubmitForm.bind(this);\r\n\r\n        this.loginForm = null;\r\n\r\n        this.state = {\r\n            userEmail: '',\r\n            userPassword: '',\r\n            formErrors: {userEmail: '', userPassword: ''},\r\n            validatioMessage: null\r\n        }\r\n    }\r\n    initLoginAction(){  \r\n        this.formOperations(this.loginForm)\r\n    }\r\n    getLoginInputData(target){\r\n        let validationInfo = formValidationText(target)\r\n        this.seveValidationInfo(validationInfo)\r\n        \r\n        if(!validationInfo.validField) return \r\n        let name = target.name;\r\n        let value = target.value;\r\n\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    seveValidationInfo(infoObject){\r\n        let targetName = Object.keys(infoObject)[0];\r\n        let errorMessage = infoObject[targetName];\r\n\r\n        let formErrors = Object.assign( this.state.formErrors );\r\n        formErrors[targetName] = errorMessage\r\n        this.setState({\r\n            formErrors, \r\n        })\r\n    }\r\n    displayValidatorMessage(){\r\n        let formErrors = this.state.formErrors;\r\n        let validatioMessage = this.state.validatioMessage;\r\n\r\n        validatioMessage = Object.entries(formErrors).map((name, i) => {\r\n            return(\r\n                <p key={i}>{ formErrors[name[0]] }</p>\r\n            )\r\n        })\r\n        this.setState({\r\n            validatioMessage\r\n        })\r\n        \r\n    }\r\n    onSubmitForm(event){\r\n        event.preventDefault();\r\n        let formResult = this.formOperations(event.target);\r\n        if(formResult.formValid){\r\n            this.props.setLogin(formResult.formObject)\r\n        }\r\n    }\r\n    formOperations(target){\r\n        let finalObject = formDataToObject.call(this, target, this.getLoginInputData);\r\n        this.displayValidatorMessage()\r\n        \r\n        return finalObject\r\n    }\r\n    render(){\r\n        const validatorMessage = this.state.validatioMessage;\r\n        return(\r\n            <div>\r\n                <h1>Login</h1>\r\n                <div >{ validatorMessage ? validatorMessage : '' }</div>\r\n                <form onSubmit={e => this.onSubmitForm(e)} ref={form => this.loginForm = form}>\r\n                    <input type=\"email\" name=\"userEmail\" placeholder=\"enter you email\" required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" />\r\n                    <input type=\"password\" name=\"userPassword\" placeholder=\"enter you password\" minLength=\"5\" maxLength=\"30\" required />\r\n                    <button onClick={this.initLoginAction}>Login</button>\r\n                </form>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(state => ({\r\n    loginCheck: state.loginCheck\r\n}), dispatch => ({\r\n        setLogin: (formObject) => {\r\n            const loginData = () => { \r\n                return setLogin(formObject)\r\n            }\r\n            dispatch(loginData())\r\n        }\r\n    })\r\n)(Login)\r\n","export const formActions = {\r\n    SWITCH_FORM: 'SWITCH_FORM',\r\n    LOGIN: 'LOGINED',\r\n    REGISTRATION: 'REGISTRATION',\r\n    UNLOGIN: 'UNLOGINED',\r\n}","import { registrationNewUser } from '../api/serverRequests';\r\nimport { formActions } from '../constants/actionsName';\r\n\r\nexport function setRegistration(formObject){\r\n    return dispatch => {\r\n        registrationNewUser(formObject)\r\n        .then(resolve => { \r\n            dispatch({ type: formActions['LOGIN'], payload: resolve })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setRegistration } from '../actions/registrationAction';\r\nimport { formValidationText } from '../helpers/validators';\r\nimport { formDataToObject } from '../helpers/transformData';\r\n\r\n\r\nclass Registration extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.initRegistrationAction = this.initRegistrationAction.bind(this);\r\n        \r\n        this.onSubmitForm = this.onSubmitForm.bind(this);\r\n\r\n        this.registrationForm = null;\r\n\r\n        this.state = {\r\n            userName: '',\r\n            userEmail: '',\r\n            userPassword: '',\r\n            formErrors: { userName: '', userEmail: '', userPassword: ''},\r\n            validatioMessage: null\r\n        }\r\n    }\r\n    initRegistrationAction(){\r\n        this.formOperations(this.registrationForm)\r\n    }\r\n    getLoginInputData(target){\r\n        let validationInfo = formValidationText(target)\r\n        this.seveValidationInfo(validationInfo)\r\n        \r\n        if(!validationInfo.validField) return \r\n        let name = target.name;\r\n        let value = target.value;\r\n\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    seveValidationInfo(infoObject){\r\n        let targetName = Object.keys(infoObject)[0];\r\n        let errorMessage = infoObject[targetName];\r\n\r\n        let formErrors = Object.assign( this.state.formErrors );\r\n        formErrors[targetName] = errorMessage\r\n        this.setState({\r\n            formErrors, \r\n        })\r\n    }\r\n    displayValidatorMessage(){\r\n        let formErrors = this.state.formErrors;\r\n        let validatioMessage = this.state.validatioMessage;\r\n\r\n        validatioMessage = Object.entries(formErrors).map((name, i) => {\r\n            return(\r\n                <p key={i}>{ formErrors[name[0]] }</p>\r\n            )\r\n        })\r\n        this.setState({\r\n            validatioMessage\r\n        }) \r\n    }\r\n    onSubmitForm(event){\r\n        event.preventDefault();\r\n        let formResult = this.formOperations(event.target);\r\n        if(formResult.formValid){\r\n            this.props.setRegistration(formResult.formObject)\r\n        }\r\n    }\r\n    formOperations(target){\r\n        let finalObject = formDataToObject.call(this, target, this.getLoginInputData);\r\n        this.displayValidatorMessage()\r\n        \r\n        return finalObject\r\n    }\r\n    render(){\r\n        const validatorMessage = this.state.validatioMessage;\r\n        return(\r\n            <div>\r\n                <h1>Registration</h1>\r\n                <div >{ validatorMessage ? validatorMessage : '' }</div>\r\n                <form onSubmit={e => this.onSubmitForm(e)} ref={form => this.registrationForm = form}>\r\n                    <input type=\"text\" name=\"userName\" placeholder=\"create you name\" required minLength=\"3\" maxLength=\"30\" />\r\n                    <input type=\"email\" name=\"userEmail\" placeholder=\"enter you email\" required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" />\r\n                    <input type=\"password\" name=\"userPassword\"  placeholder=\"create you password\" required minLength=\"5\" maxLength=\"30\" />\r\n                    \r\n                    <button onClick={this.initRegistrationAction}>Registration</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(state => ({\r\n    loginCheck: state.loginCheck\r\n}), ( dispatch ) => ({\r\n    setRegistration: (formObject) => {\r\n        const loginData = () => { \r\n            return setRegistration(formObject)\r\n        }\r\n        dispatch(loginData())\r\n    }\r\n}))(Registration)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setLogin } from '../actions/loginActions';\r\nimport { switchForm } from '../actions/switchForm';\r\nimport { NavLink, Redirect, } from 'react-router-dom';\r\n\r\n\r\nimport Login from './Login';\r\nimport Registration from './Registration';\r\n\r\n\r\n\r\nclass WelcomeScreen extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.switchToLogin = this.switchToLogin.bind(this);\r\n        this.switchToRegistration = this.switchToRegistration.bind(this);\r\n        this.state = {\r\n            selectAuthOption: \"LOGIN\"\r\n        }\r\n    }\r\n    switchToLogin(){\r\n        this.setState({\r\n            selectAuthOption: \"LOGIN\"\r\n        })\r\n        this.props.switchForm(\"LOGIN\")\r\n    }\r\n    switchToRegistration(){\r\n        this.setState({\r\n            selectAuthOption: \"REGISTRATION\"\r\n        })\r\n        this.props.switchForm(\"REGISTRATION\")\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            selectAuthOption: this.props.globalState.currentInitForm\r\n        })\r\n    }\r\n    render(){\r\n        let selectAuthOption = this.state.selectAuthOption;\r\n        return(\r\n            <div>\r\n                <h1>Welcome</h1>\r\n                <ul>\r\n                    <li><NavLink to=\"/\">Home</NavLink></li>\r\n                </ul>\r\n                \r\n                <button onClick={ this.switchToLogin }>To Login</button>\r\n                <button onClick={ this.switchToRegistration }>To Registration</button>\r\n                { selectAuthOption === \"LOGIN\" ? <Login /> : <Registration /> }\r\n                { this.props.loginCheck.isLogined ? <Redirect to='/' />: \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(state => ({\r\n    loginCheck: state.loginCheck,\r\n    globalState: state.globalState\r\n}), dispatch => ({\r\n        setLogin: () => {\r\n            const loginData = () => { \r\n                return setLogin(dispatch)\r\n            }\r\n            dispatch(loginData())\r\n        },\r\n        switchForm: (formState) => {\r\n            switchForm(dispatch, formState)\r\n        }\r\n    })\r\n)(WelcomeScreen)\r\n","import { formActions } from '../constants/actionsName';\r\n\r\nexport function switchForm(dispatch, formState){\r\n    dispatch({ type: formActions['SWITCH_FORM'], payload: formState})\r\n} ","import React, { createContext, useState } from 'react';\r\nimport { BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setLogin } from '../actions/loginActions';\r\n\r\nimport Home from '../components/Home';\r\nimport Login from '../components/Login';\r\nimport Registration from '../components/Registration';\r\nimport WelcomeScreen from '../components/WelcomeScreen';\r\n\r\n\r\nconst authContext = createContext();\r\n\r\nfunction ProvideAuth({ children, props }) {\r\n    const auth = useProvideAuth();\r\n    return (\r\n      <authContext.Provider value={auth}>\r\n        {children}\r\n      </authContext.Provider>\r\n    )\r\n}\r\n\r\nfunction useProvideAuth() {\r\n    const [userData, setUser] = useState({\r\n        isLogined: false\r\n    });\r\n    return {\r\n        userData,\r\n        setUser\r\n    }\r\n}\r\n\r\nfunction Navigation(props){\r\n    const loginCheck = props.loginCheck;\r\n\r\n     return(\r\n        <div>\r\n            \r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path=\"/\"  >\r\n                            {loginCheck.isLogined ? <Home /> : <Redirect to=\"/welcome\" />}\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/welcome\">\r\n                            <WelcomeScreen />\r\n                        </Route>\r\n                        <Route exact path=\"/welcome/login\">\r\n                            <Login />\r\n                        </Route>\r\n                        <Route exact path=\"/welcome/registration\">\r\n                            <Registration />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(state => ({\r\n    loginCheck: state.loginCheck\r\n}), dispatch => ({\r\n        setLogin: () => {\r\n            const loginData = () => { \r\n                return setLogin(dispatch)\r\n            }\r\n            dispatch(loginData())\r\n        }\r\n    })\r\n)(Navigation)","import './styles/App.css'\nimport Navigation from './components/Navigation'\n\nfunction App() {\n  \n  return (\n    <div>\n      <Navigation />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { formActions } from '../constants/actionsName';\r\n\r\nconst initialState = {\r\n    isLogined: false,\r\n    loginMessage: ''\r\n}\r\n\r\nexport default function loginCheck(state = initialState, action){\r\n    if(action.type === formActions['UNLOGIN']){\r\n        return {\r\n            ...state,\r\n            isLogined: action.payload.isLogined\r\n        }\r\n    } else if(action.type === formActions['LOGIN']){\r\n        return {\r\n            ...state,\r\n            isLogined: action.payload.isLogined\r\n        }\r\n    } else if(action.type === formActions['REGISTRATION']){\r\n        return {\r\n            ...state,\r\n            isLogined: action.payload.isLogined\r\n        }\r\n    }\r\n    return state\r\n}","\r\nimport { formActions } from '../constants/actionsName';\r\n\r\nconst initialState = {\r\n    currentInitForm: \"LOGIN\"\r\n}\r\nexport default function globalState(state = initialState, action){ \r\n    if(action.type === formActions['SWITCH_FORM']){\r\n        return {\r\n            ...state,\r\n            currentInitForm : action\r\n        }\r\n    }\r\n    return state\r\n}","import { combineReducers } from 'redux';\r\nimport loginCheck from './initUser';\r\nimport globalState from './appGlobalState';\r\n\r\nexport default combineReducers({\r\n    loginCheck,\r\n    globalState\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from '../reducers/main'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nexport default createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/configurStore';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}